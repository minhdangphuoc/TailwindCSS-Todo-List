{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","tasks","ID_History","list","handleSubmit","task","setState","done","onCloud","handleRandom","a","fetch","then","res","json","message","handleSave","method","headers","body","JSON","stringify","response","data","toast","success","push","id","newList","map","todo","_id","catch","error","console","log","handleLoad","index","handleUpdate","newTasks","handleDelete","newArr","splice","handleToggle","Promise","all","className","numTodos","this","length","addRandom","onSave","onFormSubmit","onDelete","onUpdate","onLoad","historyList","React","Component","SubmitForm","term","e","preventDefault","props","onSubmit","type","placeholder","value","onChange","target","Header","onClick","History","history","UpdateForm","LoadForm","TodoList","todos","content","Todo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e883d7e4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n  };\n  ID_History = {\n    list: [],\n  };\n\n  componentDidMount () {\n    Promise.all([\n      fetch(`/api/v1/task/random`).then((res) => res.json()).then((json) => {this.setState({tasks: [...this.state.tasks, {task: json.message, done: false, onCloud: false}]});}),\n      fetch(`/api/v1/task/random`).then((res) => res.json()).then((json) => {this.setState({tasks: [...this.state.tasks, {task: json.message, done: false, onCloud: false}]});}),\n      fetch(`/api/v1/task/random`).then((res) => res.json()).then((json) => {this.setState({tasks: [...this.state.tasks, {task: json.message, done: false, onCloud: false}]});}),\n      ])\n  }\n\n  handleSubmit = task => {\n    this.setState({tasks: [...this.state.tasks, {task: task, done: false, onCloud: false}]});\n  }\n\n  handleRandom = async() => {\n    await fetch(`/api/v1/task/random`)\n    .then((res) => res.json())\n    .then((json) => {this.setState({tasks: [...this.state.tasks, {task: json.message, done: false, onCloud: false}]});})\n  }\n  \n  handleSave = async() => {\n    await fetch('/api/v1/task/list', {\n      method: \"POST\",  \n      headers: {\n        'Access-Control-Allow-Origin' : '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    })\n    .then((response) => response.json()).then (data => {\n      toast.success(data);\n      this.ID_History.list.push({id: data})\n      const newList = this.state.tasks.map(todo => {\n        // if this task has the same ID as the edited task\n        if (todo.onCloud === false) {\n           //\n           return {\n              _id: data,\n              task: todo.task,\n              done: todo.done,\n              onCloud: true,\n           }\n        }\n        return todo;\n     })\n     this.setState({tasks: newList});\n    })\n    .catch(function (error) {\n      console.log(error);\n      toast.error(error);\n    })}\n  \n  handleLoad = async(index) => {\n    await fetch(\"/api/v1/task/list/\" + index, {\n      method: \"GET\"\n    })\n      .then((response) => response.json()).then (data => {\n        toast.success(\"Loading completed\");\n        const newList = data.tasks.map(todo => {\n            return {\n            _id: index,\n            task: todo.task,\n            done: todo.done,\n            onCloud: true,\n            }     \n       })\n       this.setState({tasks: newList});\n      })\n      .catch(function (error) {\n        toast.error(error);\n        console.log(error);\n      });\n  }\n\n  handleUpdate = async(index) => {\n    let newTasks = this.state.tasks.map(todo => {\n      if (todo._id === index ){\n        return{\n          task: todo.task,\n          done: todo.done,\n        }\n      }\n    })\n    await fetch(\"/api/v1/task/list/\" + index, {\n      method: \"PUT\",  \n      headers: {\n        'Access-Control-Allow-Origin' : '*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\"tasks\": newTasks})\n    })\n    .then((response) => response.json()).then (data => {\n      // alert(data);\n      toast.success(\"Update completed\");\n      const newList = this.state.tasks.map(todo => {\n        // if this task has the same ID as the edited task\n        if (todo.onCloud === false && todo._id === index) {\n           //\n           return {\n              onCloud: true,\n           }\n        }\n        return todo;\n     })\n    })\n      .catch(function (error) {\n        toast.error(error);\n        console.log(error);\n      });\n  }\n\n\n  handleDelete = (index) => {\n    const newArr = [...this.state.tasks];\n    newArr.splice(index, 1);\n    this.setState({tasks: newArr});\n  }\n\n  handleToggle = (index) => {\n    const newArr = [...this.state.tasks];\n    newArr[index]['done'] = !newArr[index]['done'];\n    newArr[index]['onCloud'] = false;\n    this.setState({tasks: newArr});\n  }\n\n  render() {\n    return(\n      <div className='wrapper h-screen w-screen flex items-center justify-center bg-green-200 font-sans'>\n        <ToastContainer />\n        <div className='flex w-3/5'>\n          <div className='card frame bg-white rounded shadow p-6 m-4 max-h-full w-full '>\n            <Header numTodos={this.state.tasks.length} addRandom={this.handleRandom}  onSave={this.handleSave}/>\n            <SubmitForm onFormSubmit={this.handleSubmit} />\n            <TodoList tasks={this.state.tasks} done={this.handleToggle} onDelete={this.handleDelete} />\n            <div className='flex w-full'>\n              <UpdateForm onUpdate={this.handleUpdate}/>\n              <LoadForm onLoad={this.handleLoad}/>\n            </div>\n          </div>\n          <div className='card frame bg-white rounded shadow p-6 m-4 max-h-max w-1/3'>\n            <History historyList={this.ID_History.list}/>\n          </div>\n        </div>\n      </div>\n    );\n  } \n}\n\n\nclass SubmitForm extends React.Component {\n  state = { term: '' };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.term === '') return;\n    this.props.onFormSubmit(this.state.term);\n    this.setState({ term: '' });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className='flex mt-4'>\n        <input \n          type='text'\n          className='input'\n          placeholder='Enter Item'\n          value={this.state.term}\n          onChange={(e) => this.setState({term: e.target.value})}\n          className=\"transition-all shadow appearance-none border rounded w-full py-2 px-3 mr-2 mb-4 text-grey-darker\"\n        />\n        <button className='transition-all flex-no-shrink p-2 border-2 rounded text-purple-500 mb-4 border-purple-500 hover:text-white hover:bg-purple-500'>Submit</button>\n      </form>\n    );\n  }\n}\n\n\nconst Header = (props) => {\n  return(\n    <div>\n      <div className='todo flex mb-4 items-center'>\n        <h1 className=\"antialiased w-full text-grey-darkest font-semibold text-xl\">Todo List</h1>\n          <button className={\"transition-all antialiased flex-no-shrink p-1.5 mr-2 font-semibold border-0 rounded hover:text-white text-purple-500 hover:bg-purple-500\"} onClick={() => {props.addRandom()}}>Random</button>\n          <button className={\"transition-all antialiased flex-no-shrink p-1.5 font-semibold border-0 rounded hover:text-white text-purple-500 hover:bg-purple-500\"} onClick={() => {props.onSave()}}>Save</button>\n        </div>\n      <div className='card-header'>\n        <h1 className='card-header-title header'>\n          You have {props.numTodos} Todos\n        </h1>\n      </div>\n    </div>\n  )\n}\n\nconst History = (props) => {\n    const history = props.historyList.map(data => {\n      return <p className='transition-all text-grey-800 antialiased w-full text-base font-normal'> {\"- \"+data.id} </p>\n    })\n    return(\n      <div>\n        <h1 className=\"antialiased w-full text-grey-darkest font-semibold text-xl\">History</h1>\n        {history}\n      </div>\n    );\n}\n\nclass UpdateForm extends React.Component {\n  state = { term: '' };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.term === '') return;\n    this.props.onUpdate(this.state.term);\n    this.setState({ term: '' });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className='flex w-full mt-4'>\n        <input \n          type='text'\n          className='input'\n          placeholder='Enter Item'\n          value={this.state.term}\n          onChange={(e) => this.setState({term: e.target.value})}\n          className=\"transition-all shadow w-full appearance-none border rounded w-full py-2 px-3 mr-2 mb-4 text-grey-darker\"\n        />\n        <button className='transition-all flex-no-shrink p-2 border-2 rounded text-purple-500 mb-4 border-purple-500 hover:text-white hover:bg-purple-500'>Update</button>\n      </form>\n    );\n  }\n}\n\nclass LoadForm extends React.Component {\n  state = { term: '' };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if(this.state.term === '') return;\n    this.props.onLoad(this.state.term);\n    this.setState({ term: '' });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit} className='flex w-full mt-4'>\n        <input \n          type='text'\n          className='input'\n          placeholder='Enter Item'\n          value={this.state.term}\n          onChange={(e) => this.setState({term: e.target.value})}\n          className=\"transition-all shadow  ml-8 appearance-none border rounded w-full py-2 px-3 mr-2 mb-4 text-grey-darker\"\n        />\n        <button className='transition-all flex-no-shrink p-2 border-2 rounded text-purple-500 mb-4 border-purple-500 hover:text-white hover:bg-purple-500'>Load</button>\n      </form>\n    );\n  }\n}\n\n\nconst TodoList = (props) => {\n  const todos = props.tasks.map((todo, index) => {\n    return <Todo content={todo.task} todo={todo} id={index} _id={todo._id} key={index} done={props.done} onDelete={props.onDelete} />\n  })\n  return( \n    <div className='list-wrapper'>\n      {todos}\n    </div>\n  );\n}\n\nconst Todo = (props) => {\n  return(\n    <div className=\"todo flex mb-4 items-center\">\n      <p className={props.todo.done? \"transition-all line-through text-green-400 antialiased w-full text-base font-normal\":\"transition-all text-grey-800 antialiased w-full text-base font-normal\"}>{props.content}</p>\n      <p className={props.todo.onCloud? \"transition-all antialiased flex-no-shrink pl-2 pt-1 pb-1 pr-2 border-0 rounded-full text-xs\tbg-green-400 text-white\":\"transition-all antialiased flex-no-shrink text-xs pl-2 pt-1 pb-1 pr-2 border-0 rounded-full bg-gray-300 text-white\"}>{props.todo.onCloud? \"Saved\":\"Unsave\"}</p>\n      <button className={props.todo.done? \"transition-all\tflex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-gray-300 border-gray-300 hover:bg-gray-300\":\"transition-all\tflex-no-shrink p-2 ml-4 mr-2 border-2 rounded hover:text-white text-green-400 border-green-400 hover:bg-green-400\"}  onClick={() => {props.done(props.id)}}>{props.todo.done? \"Undo\":\"Done\"}</button>\n      <button className=\"transition-all flex-no-shrink p-2 ml-2 border-2 rounded text-red-400 border-red-400 hover:text-white hover:bg-red-400\" onClick={() => {props.onDelete(props.id)}}>Remove</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}